stages:
  - build
  - deploy

build_at:
  stage: build
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  tags:
    - build

  variables:
    IDF_PATH: "$CI_PROJECT_DIR/esp-idf"
    GIT_STRATEGY: clone
    
  artifacts:
    paths:
      - build/*.bin
      - build/*.elf
      - build/*.map
      - build/bootloader/*.bin
      - build/customized_partitions/*.bin
      - build/download.config
    expire_in: 6 mos

  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -n $GITLAB_KEY >> ~/.ssh/id_rsa_base64
    - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host gitlab.espressif.cn\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
    - git submodule update --init --recursive

  script:
    - sed -i "/CONFIG_AT_OTA_TOKEN_KEY/c\\CONFIG_AT_OTA_TOKEN_KEY=\"$AT_OTA_KEY\"" sdkconfig.defaults
    - sed -i "/CONFIG_AT_OTA_SSL_TOKEN_KEY/c\\CONFIG_AT_OTA_SSL_TOKEN_KEY=\"$AT_OTA_KEY\"" sdkconfig.defaults
    - make defconfig
    - make -j4
    - make print_flash_cmd | tail -n 1 > build/download.config
    - make factory_bin

push_master_to_github:
  stage: deploy
  only:
    - master
    - /^release\/v.*$/
  tags:
    - deploy
  when: on_success
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  variables:
    GIT_STRATEGY: clone
    GITHUB_PUSH_REFS: refs/remotes/origin/release refs/remotes/origin/master
  script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -n $GH_PUSH_KEY > ~/.ssh/id_rsa_base64
    - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
    - git remote add github git@github.com:espressif/esp32-at.git
    # - git push --follow-tags github HEAD:master
    - eval $(git for-each-ref --shell bash --format 'if [ $CI_COMMIT_SHA == %(objectname) ]; then git checkout -B %(refname:strip=3); git push --follow-tags github %(refname:strip=3); fi;' $GITHUB_PUSH_REFS)
